* Practice Problem 3.1
  | Operand        | Value |
  |----------------+-------|
  | %rax           | 0x100 |
  | 0x104          |  0xAB |
  | $0x108         |  0x13 |
  | (%rax)         |  0xFF |
  | 4(%rax)        |  0xAB |
  | 9(%rax,%rdx)   |  0x11 |
  | 260(%rcx,%rdx) |  0x13 |
  | 0xFC(,%rcx,4)  |  0xFF |
  | (%rax,%rdx,4)  |  0x11 |
* Practice Problem 3.2
  movl %eax, (%rsp)
  movw (%rax), %dx
  movb $0xFF, %bl
  movb (%rsp,%rdx,4), %dl
  movq (%rdx), %rax
  movb %dx, (%rax)
* Practice Problem 3.3
  movb $0xF, (%ebx)   : incorrect memory value (4 bits).
  movl %rax, (%rsp)   : rax register is a quad word.
  movw (%rax),4(%rsp) : invalid operand form.
  movb %al,%sl        : sl register doesn't exist.
  movq %rax,$0x123    : incorrect memory value (12 bits).
  movl %eax,%rdx      : rdx register is a quad word.
  movb %si, 8(%rbp)   : si register is a word.
* Practice Problem 3.4
  ~src_t *sp;  // rdi~
  ~dest_t *dp; // rsi~
  ~*dp = (dest_t) *sp;~
  Registers: %rax, %eax, %ax, or %al

  | src_t         | dest_t        | Instruction         |
  |---------------+---------------+---------------------|
  | long          | long          | movq (%rdi), %rax   |
  |               |               | movq %rax, (%rsi)   |
  | char          | int           | movsbl (%rdi), %eax |
  |               |               | movl %eax, (%rsi)   |
  | char          | unsigned      | movl (%rdi), %eax   |
  |               |               | movl %eax, (%rsi)   |
  | unsigned char | long          | movq (%rdi), %rax   |
  |               |               | movq %rax, (%rsi)   |
  | int           | char          | movb (%rdi), %al    |
  |               |               | movb %al, (%rsi)    |
  | unsigned      | unsigned char | movb (%rdi), %al    |
  |               |               | movb %al, (%rsi)    |
  | char          | short         | movsbw (%rdi), %ax  |
  |               |               | movw %ax, (%rsi)    |
