package com.company.hellospeedment.db0.hellospeedment.user.generated;

import com.company.hellospeedment.db0.hellospeedment.user.User;
import com.company.hellospeedment.db0.hellospeedment.user.UserImpl;
import com.speedment.Speedment;
import com.speedment.internal.core.code.AbstractBaseEntity;
import java.util.Objects;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * The generated base implementation representing an entity (for example, a
 * row) in the Table hellospeedment.db0.hellospeedment.user.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made
 * to it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedUserImpl extends AbstractBaseEntity<User> implements User {
    
    private Long id;
    private String name;
    private Integer age;
    
    protected GeneratedUserImpl() {
        
    }
    
    @Override
    public Long getId() {
        return id;
    }
    
    @Override
    public String getName() {
        return name;
    }
    
    @Override
    public Integer getAge() {
        return age;
    }
    
    @Override
    public final User setId(Long id) {
        this.id = id;
        return this;
    }
    
    @Override
    public final User setName(String name) {
        this.name = name;
        return this;
    }
    
    @Override
    public final User setAge(Integer age) {
        this.age = age;
        return this;
    }
    
    @Override
    public User copy() {
        final User user = new UserImpl() {
            @Override
            protected final Speedment speedment() {
                return GeneratedUserImpl.this.speedment();
            }
        };
        
        setId(user.getId());
        setName(user.getName());
        setAge(user.getAge());
        
        return user;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "+Objects.toString(getId()));
        sj.add("name = "+Objects.toString(getName()));
        sj.add("age = "+Objects.toString(getAge()));
        return "UserImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof User)) { return false; }
        final User thatUser = (User)that;
        if (!Objects.equals(this.getId(), thatUser.getId())) {return false; }
        if (!Objects.equals(this.getName(), thatUser.getName())) {return false; }
        if (!Objects.equals(this.getAge(), thatUser.getAge())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getName());
        hash = 31 * hash + Objects.hashCode(getAge());
        return hash;
    }
    
    @Override
    public Class<User> entityClass() {
        return User.class;
    }
}