package com.company.hellospeedment.db0.hellospeedment.user.generated;

import com.company.hellospeedment.db0.hellospeedment.user.User;
import com.speedment.Entity;
import com.speedment.config.db.mapper.identity.IntegerIdentityMapper;
import com.speedment.config.db.mapper.identity.LongIdentityMapper;
import com.speedment.config.db.mapper.identity.StringIdentityMapper;
import com.speedment.field.ComparableField;
import com.speedment.field.FieldIdentifier;
import com.speedment.field.StringField;
import com.speedment.internal.core.field.ComparableFieldImpl;
import com.speedment.internal.core.field.StringFieldImpl;
import javax.annotation.Generated;

/**
 * The generated base interface representing an entity (for example, a row)
 * in the Table hellospeedment.db0.hellospeedment.user.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made
 * to it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface GeneratedUser extends Entity<User> {
    
    /**
     * This Field corresponds to the {@link User} field that can be obtained
     * using the {@link User#getId()} method.
     */
    final ComparableField<User, Long, Long> ID = new ComparableFieldImpl<>(Identifier.ID, User::getId, User::setId, new LongIdentityMapper(), true);
    /**
     * This Field corresponds to the {@link User} field that can be obtained
     * using the {@link User#getName()} method.
     */
    final StringField<User, String> NAME = new StringFieldImpl<>(Identifier.NAME, User::getName, User::setName, new StringIdentityMapper(), true);
    /**
     * This Field corresponds to the {@link User} field that can be obtained
     * using the {@link User#getAge()} method.
     */
    final ComparableField<User, Integer, Integer> AGE = new ComparableFieldImpl<>(Identifier.AGE, User::getAge, User::setAge, new IntegerIdentityMapper(), false);
    
    /**
     * Returns the id of this User. The id field corresponds to the database
     * column db0.hellospeedment.user.id.
     * 
     * @return the id of this User
     */
    Long getId();
    
    /**
     * Returns the name of this User. The name field corresponds to the database
     * column db0.hellospeedment.user.name.
     * 
     * @return the name of this User
     */
    String getName();
    
    /**
     * Returns the age of this User. The age field corresponds to the database
     * column db0.hellospeedment.user.age.
     * 
     * @return the age of this User
     */
    Integer getAge();
    
    /**
     * Sets the id of this User. The id field corresponds to the database column
     * db0.hellospeedment.user.id.
     * 
     * @param id to set of this User
     * @return this User instance
     */
    User setId(Long id);
    
    /**
     * Sets the name of this User. The name field corresponds to the database
     * column db0.hellospeedment.user.name.
     * 
     * @param name to set of this User
     * @return this User instance
     */
    User setName(String name);
    
    /**
     * Sets the age of this User. The age field corresponds to the database
     * column db0.hellospeedment.user.age.
     * 
     * @param age to set of this User
     * @return this User instance
     */
    User setAge(Integer age);
    
    enum Identifier implements FieldIdentifier<User> {
        
        ID ("id"),
        NAME ("name"),
        AGE ("age");
        
        private final String columnName;
        
        Identifier(String columnName) {
            this.columnName = columnName;
        }
        
        @Override
        public String dbmsName() {
            return "db0";
        }
        
        @Override
        public String schemaName() {
            return "hellospeedment";
        }
        
        @Override
        public String tableName() {
            return "user";
        }
        
        @Override
        public String columnName() {
            return this.columnName;
        }
    }
}